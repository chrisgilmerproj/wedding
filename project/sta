#!/bin/bash
function lowercase() {
    echo ${1}  | tr '[A-Z]' '[a-z]'
}
function pluralize() {
    # Should be improved for cases like goose > geese
    echo ${1}s
}

#Should be called with the name of the model class, e.g. Picture
CLASS=$1
#Lowercase the model, e.g. return picture
NAME=$(lowercase "$CLASS")
#Pluralize the lowercased model, e.g. return pictures
FOLDER=$(pluralize $(lowercase "$CLASS"))

# Create Folder
python manage.py startapp $FOLDER
mv $FOLDER apps/$FOLDER
# models.py
echo -e "from django.db import models\nclass $CLASS(models.Model):\n    \"\"\"Stores a $NAME.\"\"\"\n    pass\n\n    class Meta:\n        ordering = [\"id\"]\n\n    @models.permalink\n    def get_absolute_url(self):\n        return ('${NAME}_show', (), {'${NAME}_id': self.id})\n" > apps/$FOLDER/models.py
# tests.py
rm apps/$FOLDER/tests.py
# admin.py
echo -e "from django.contrib import admin\nfrom $FOLDER.models import $CLASS\nadmin.site.register($CLASS)" > apps/$FOLDER/admin.py
# views
echo -e "from django.shortcuts import render_to_response, get_object_or_404\nfrom django.template import RequestContext \nfrom $FOLDER.models import $CLASS\n\ndef index(request):\n    $FOLDER = $CLASS.objects.all()\n    return render_to_response('$FOLDER/index.html', \n        {'$FOLDER': $FOLDER}, context_instance = RequestContext(request))\n\ndef show(request, ${NAME}_id):\n    \"\"\"\n    Display an individual :model:\`$FOLDER.$CLASS\`.\n\n    **Context**\n\n    \`\`RequestContext\`\`\n        ...\n    \`\`${NAME}_id\`\`\n        The id of a :model:\`$FOLDER.$CLASS\`.\n\n    **Template:**\n\n    :template:\`$FOLDER/show.html\`\n    \"\"\"\n    $NAME = get_object_or_404($CLASS, pk=${NAME}_id)\n    context_instance = RequestContext(request)\n    return render_to_response('$FOLDER/show.html', \n        {'$NAME': $NAME}, \n        context_instance = RequestContext(request))\n" > apps/$FOLDER/views.py
# templates
mkdir templates/$FOLDER
echo -e "{% extends \"base.html\" %}\n{% block content %}\n\nThis page is a placemark to show $CLASS {{$NAME.id}}\n\n{% endblock content %}" > templates/$FOLDER/show.html
echo -e "{% extends \"base.html\" %}\n{% block content %}\n\nThis page is a placemark to list $FOLDER.\n{% if $FOLDER %}\n    <ul>\n    {% for $NAME in $FOLDER %}\n        <li><a href="{{ $NAME.get_absolute_url }}">{{ $NAME.id }}</a></li>\n    {% endfor %}\n    </ul>\n{% else %}\n    <p>No $FOLDER are available.</p>\n{% endif %}\n\n\n{% endblock content %}" > templates/$FOLDER/index.html
# urls.py
echo -e "from django.conf.urls.defaults import *\nfrom $FOLDER.models import $CLASS\n\nurlpatterns = patterns('$FOLDER.views',\n    (r'^$', 'index',\n        {}, '${NAME}_index'),\n    (r'^(?P<${NAME}_id>[\d]+)/$', 'show',\n        {}, '${NAME}_show'),\n)" > apps/$FOLDER/urls.py
# fixtures
mkdir apps/$FOLDER/fixtures
# features
mkdir apps/$FOLDER/features
touch apps/$FOLDER/features/__init__.py
touch apps/$FOLDER/features/$NAME.py
touch apps/$FOLDER/features/$NAME.feature
# add the tables
# python manage.py syncdb
# Result
echo -e "Application $CLASS created correctly.\nTo activate the application:\n\n    * add '$FOLDER' to INSTALLED_APPS in settings/__init__.py\n    * add (r'^$FOLDER/', include('$FOLDER.urls')) to urlpatterns in urls.py\n    * run ./syn [environment]\n"
